# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the master branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke

name: Build and Deploy to GKE

on:
  push:
    branches:
      - main
      - master

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_PROJECT_GCR: ${{ secrets.GKE_PROJECT_GCR }}
  GKE_CLUSTER: hello-cluster   # TODO: update to cluster name
  GKE_ZONE: us-central1-a   # TODO: update to cluster zone
  GKE_REGION: us-central1   # TODO: update to cluster zone
  DEPLOYMENT_NAME: helm-chart # TODO: update to deployment name
  IMAGE: helm-chart
  DEV_DEPLOYMENT_NAME: dev-helm-chart # TODO: update to deployment name
  DEV_IMAGE: dev-helm-chart
  LOCALDEV_DEPLOYMENT_NAME: localdev-helm-chart # TODO: update to deployment name
  LOCALDEV_IMAGE: localdev-helm-chart
  SA_EMAIL: ${{ secrets.SA_EMAIL}}

jobs:
  setup-build-publish:
    name: Setup, Build, Publish
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    # - uses: google-github-actions/setup-gcloud@v0.2.0
    #   with:
    #     service_account_key: ${{ secrets.GKE_SA_KEY }}
    #     project_id: ${{ secrets.GKE_PROJECT }}

    # Setup gcloud CLI for gcr
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY_GCR }}
        project_id: ${{ secrets.GKE_PROJECT_GCR }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    # - run: |-
    #     gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
    # - uses: google-github-actions/get-gke-credentials@v0.2.1
    #   with:
    #     cluster_name: ${{ env.GKE_CLUSTER }}
    #     # location: ${{ env.GKE_ZONE }}
    #     location: [${{ env.GKE_ZONE_ONE }}, ${{ env.GKE_ZONE_TWO }}]
    #     credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$GKE_PROJECT_GCR/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

          # --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          # --build-arg GITHUB_SHA="$GITHUB_SHA" \
          # --build-arg GITHUB_REF="$GITHUB_REF" \
          # .

    # Push the Docker image to Google Container Registry
    # - name: Publish
    #   run: |-
    #     gcloud auth activate-service-account $SA_EMAIL --key-file=${{secrets.GKE_SA_KEY_GCR}}
    #     # docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
    #     docker push "gcr.io/$GKE_PROJECT_GCR/$IMAGE:$GITHUB_SHA"

    # - name: Login to Registory
    #   uses: docker/login-action@v1
    #   with:
    #     registry: gcr.io
    #     username: _json_key
    #     password: ${{secrets.GKE_SA_KEY_GCR}}

    - name: Publish
      run: |-
        docker push "gcr.io/$GKE_PROJECT_GCR/$IMAGE:$GITHUB_SHA"

  Deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    needs: setup-build-publish

    steps:
    # - name: Checkout
    #   uses: actions/checkout@v2
    - name: Checkout
      uses: actions/checkout@v2

    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Install helm
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Deploy
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER \
            --zone=$GKE_ZONE \
            --project=$GKE_PROJECT
        helm upgrade $DEPLOYMENT_NAME $DEPLOYMENT_NAME/ \
          --install \
          --set image.tag=$GITHUB_SHA \
          --wait \
          --debug

        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide